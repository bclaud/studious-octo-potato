defmodule InstalacaoSolar.Analises.Instalacao do
  use Ash.Resource,
    data_layer: AshPostgres.DataLayer,
    extensions: [AshJsonApi.Resource]

  postgres do
    table "instalacoes"
    repo InstalacaoSolar.Repo
  end

  json_api do
    type "instalacao"

    routes do
      base("/instalacao")

      get(:read)

      index :read
    end
  end

  actions do
    # pra passar por essa action, teria que usar o Ash.Changeset.for_create()
    create :open do
      # by default you can provide all public attributes to an action
      # this action should only accpet the subject
      # pelo o que eu entendi seria um changeset que descreve uma acao
      # Como por exemplo, aprovar uma instalacao (nao fiz assim ainda)
      # ele limita os attributos que poderia receber
      accept [:nome_inversor]
    end

    update :finish do
      # we don't want to accept any input here
      accept []

      change set_attribute(:status, :finished)
      # A custom change could be added like so:
      #
      # change MyCustomChange
      # change {MyCustomChange, opt: :val}
    end

    defaults [:create, :read, :update, :destroy]
  end

  attributes do
    # Add an autogenerated UUID primary key called :id
    uuid_primary_key :id

    attribute :nome_inversor, :string do
      allow_nil? false
    end

    # simulando status de uma analise de instalacao
    attribute :status, :atom do
      # Constraints allow you to provide extra rules for the value.
      # The available constraints depend on the type
      # See the documentation for each type to know what constraints are available
      # Since atoms are generally only used when we know all of the values
      # it provides a `one_of` constraint, that only allows those values
      constraints one_of: [:finished, :in_progress, :not_started]

      default :not_started

      allow_nil? false
    end
  end
end
